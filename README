This git project is (yet another) attempt
to build a pure functional programming framework
for Scala.

To start with I have written traits for the concepts
that are dealt with in the paper 
Applicative Programming with Effects
(http://www.soi.city.ac.uk/~ross/papers/Applicative.html).

I have written the traits using a programming style
that is similar to the style I used for some blogs
on monad transformers
(http://lucdup.blogspot.com/2009/12/monad-transformers-example.html).

for the moment the following traits are defined

src/pure/_Pure.scala
src/arrow/_ApplicativeArrow.scala
src/arrow/_Arrow.scala
src/arrow/__MonadAsApplicativeArrow.scala
src/monoidal/__ApplicativeAsMonoidal.scala
src/monoidal/_Monoidal.scala
src/monoidal/_MonoidAsMonoidal.scala
src/functor/_Functor.scala
src/monad/__ApplicativeArrowAsMonad.scala
src/monad/_Monad.scala
src/category/_Category.scala
src/applicative/__ComposedApplicative.scala
src/applicative/_Applicative.scala
src/applicative/__ArrowAsApplicative.scala
src/applicative/__MonoidalAsApplicative.scala
src/monoid/_Monoid.scala
src/traversable/_Traversable.scala
src/traversable/_MonoidTraversable.scala
src/id/_Id.scala

Luc
